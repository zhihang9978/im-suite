version: '3.8'

services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: im-mysql
    environment:
      MYSQL_ROOT_PASSWORD: im_suite_root
      MYSQL_DATABASE: im_suite
      MYSQL_USER: im_suite
      MYSQL_PASSWORD: im_suite_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - im_net
    restart: unless-stopped

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: im-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - im_net
    restart: unless-stopped
    command: redis-server --appendonly yes

  # MinIO 对象存储
  minio:
    image: minio/minio:latest
    container_name: im-minio
    environment:
      MINIO_ROOT_USER: im_suite
      MINIO_ROOT_PASSWORD: im_suite_pass
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - im_net
    restart: unless-stopped
    command: server /data --console-address ":9001"

  # IM Backend 服务
  backend:
    build: ./im-backend
    container_name: im-backend
    environment:
      PORT: 8080
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: im_suite
      DB_USER: im_suite
      DB_PASSWORD: im_suite_pass
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: im_suite
      MINIO_SECRET_KEY: im_suite_pass
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis
      - minio
    networks:
      - im_net
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:
  minio_data:

networks:
  im_net:
    driver: bridge
