version: '3.8'

services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: 志航密信-mysql
    environment:
      MYSQL_ROOT_PASSWORD: zhihang_messenger_root
      MYSQL_DATABASE: zhihang_messenger
      MYSQL_USER: zhihang_messenger
      MYSQL_PASSWORD: zhihang_messenger_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - zhihang_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: 志航密信-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - zhihang_net
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5

  # MinIO 对象存储
  minio:
    image: minio/minio:latest
    container_name: 志航密信-minio
    environment:
      MINIO_ROOT_USER: zhihang_messenger
      MINIO_ROOT_PASSWORD: zhihang_messenger_pass
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - zhihang_net
    restart: unless-stopped
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      timeout: 10s
      retries: 5

  # 志航密信后端服务
  backend:
    build: 
      context: ./im-backend
      dockerfile: Dockerfile
    container_name: 志航密信-backend
    environment:
      PORT: 8080
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: zhihang_messenger
      DB_USER: zhihang_messenger
      DB_PASSWORD: zhihang_messenger_pass
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: zhihang_messenger
      MINIO_SECRET_KEY: zhihang_messenger_pass
      JWT_SECRET: zhihang_messenger_secret_key_2024
      JWT_EXPIRE_HOURS: 24
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - zhihang_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/ping"]
      timeout: 10s
      retries: 5
      interval: 30s

  # 志航密信 Web 端
  web:
    build:
      context: ./telegram-web
      dockerfile: Dockerfile
    container_name: 志航密信-web
    environment:
      VITE_API_BASE_URL: http://localhost:8080/api
      VITE_WS_BASE_URL: ws://localhost:8080/ws
      VITE_APP_TITLE: 志航密信 Web
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - zhihang_net
    restart: unless-stopped

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: 志航密信-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./scripts/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./scripts/nginx/conf.d:/etc/nginx/conf.d
      - ./scripts/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - web
    networks:
      - zhihang_net
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:
  minio_data:

networks:
  zhihang_net:
    driver: bridge
