name: Frontend Build Check

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

jobs:
  # 检查 im-admin 前端
  build-admin:
    name: Build Admin Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        lfs: true
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: im-admin/package-lock.json
    
    - name: Check package.json
      run: |
        echo "Checking im-admin package.json..."
        cat im-admin/package.json | jq '.dependencies, .devDependencies'
    
    - name: Install dependencies
      working-directory: ./im-admin
      run: |
        echo "Installing im-admin dependencies..."
        npm ci --no-audit --no-fund || npm install --no-audit --no-fund
      continue-on-error: true
    
    - name: Check node_modules
      working-directory: ./im-admin
      run: |
        echo "Checking installed packages..."
        ls -la node_modules/ | head -10
        echo "Package count: $(ls node_modules/ | wc -l)"
      continue-on-error: true
    
    - name: Try build
      working-directory: ./im-admin
      run: |
        echo "Attempting build..."
        npm run build
      continue-on-error: true

  # 检查 telegram-web 前端
  build-telegram:
    name: Build Telegram Web
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        lfs: true
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: telegram-web/package-lock.json
    
    - name: Check package.json
      run: |
        echo "Checking telegram-web package.json..."
        cat telegram-web/package.json | jq '.dependencies, .devDependencies'
    
    - name: Install dependencies
      working-directory: ./telegram-web
      run: |
        echo "Installing telegram-web dependencies..."
        npm ci --no-audit --no-fund || npm install --no-audit --no-fund
      continue-on-error: true
    
    - name: Check node_modules
      working-directory: ./telegram-web
      run: |
        echo "Checking installed packages..."
        ls -la node_modules/ | head -10
        echo "Package count: $(ls node_modules/ | wc -l)"
      continue-on-error: true
    
    - name: Try build
      working-directory: ./telegram-web
      run: |
        echo "Attempting build..."
        npm run build
      continue-on-error: true

  # 前端项目状态报告
  frontend-report:
    name: Frontend Status Report
    runs-on: ubuntu-latest
    needs: [build-admin, build-telegram]
    if: always()
    
    steps:
    - name: Report Status
      run: |
        echo "## Frontend Build Status Report"
        echo ""
        echo "### im-admin Status: ${{ needs.build-admin.result }}"
        echo "### telegram-web Status: ${{ needs.build-telegram.result }}"
        echo ""
        if [[ "${{ needs.build-admin.result }}" == "success" && "${{ needs.build-telegram.result }}" == "success" ]]; then
          echo "✅ All frontend projects built successfully!"
        elif [[ "${{ needs.build-admin.result }}" == "failure" || "${{ needs.build-telegram.result }}" == "failure" ]]; then
          echo "⚠️ Some frontend projects failed to build, but this won't block the main workflow."
        else
          echo "ℹ️ Frontend build status: ${{ needs.build-admin.result }}, ${{ needs.build-telegram.result }}"
        fi
