name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        run: |
          # 生成变更日志
          PREV_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null || echo "")
          if [ -z "$PREV_TAG" ]; then
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            git log --pretty=format:"* %s (%h)" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            git log ${PREV_TAG}..HEAD --pretty=format:"* %s (%h)" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          body: |
            ## 🎉 志航密信 ${{ github.ref_name }}
            
            ### 📝 变更日志
            ${{ steps.changelog.outputs.changelog }}
            
            ### 📦 交付物
            - Docker镜像: `ghcr.io/${{ github.repository }}:${{ github.ref_name }}`
            - 源代码: 见下方 Assets
            - SBOM: 见下方 Assets
            
            ### 🚀 部署命令
            ```bash
            cd /opt/im-suite
            git pull
            git checkout ${{ github.ref_name }}
            bash ops/deploy.sh
            ```
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-backend:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build backend
        run: |
          cd im-backend
          go build -o im-backend -ldflags="-s -w -X main.Version=${{ github.ref_name }}" .

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          path: ./im-backend
          format: spdx-json
          output-file: im-backend-sbom.spdx.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: im-backend-sbom
          path: im-backend-sbom.spdx.json

  build-admin:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Build admin
        run: |
          cd im-admin
          npm ci
          npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: im-admin-dist
          path: im-admin/dist/

  build-docker:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./im-backend
          file: ./im-backend/Dockerfile.production
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/backend:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push admin image
        uses: docker/build-push-action@v5
        with:
          context: ./im-admin
          file: ./im-admin/Dockerfile.production
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/admin:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/admin:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Scan images with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository }}/backend:${{ github.ref_name }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

